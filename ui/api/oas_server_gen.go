// Code generated by ogen, DO NOT EDIT.

package api

import (
	"context"
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	// GetUsers implements GetUsers operation.
	//
	// Retrieve a paginated list of users using limit and offset for pagination.
	//
	// GET /users
	GetUsers(ctx context.Context) (*GetUsersOK, error)
	// GoogleAuth implements googleAuth operation.
	//
	// Validates a Google JWT token sent from the frontend, retrieves user information, and  registers a
	// new user or logs in an existing user based on token data.
	//
	// POST /auth/google
	GoogleAuth(ctx context.Context, req *SignInRequest) (GoogleAuthRes, error)
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h   Handler
	sec SecurityHandler
	baseServer
}

// NewServer creates new Server.
func NewServer(h Handler, sec SecurityHandler, opts ...ServerOption) (*Server, error) {
	s, err := newServerConfig(opts...).baseServer()
	if err != nil {
		return nil, err
	}
	return &Server{
		h:          h,
		sec:        sec,
		baseServer: s,
	}, nil
}
